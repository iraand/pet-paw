{"version":3,"file":"static/js/321.c13119c8.chunk.js","mappings":"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","sources":["pages/favourites.js","utils/split.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CircleLoader from \"react-spinners/ClipLoader\";\nimport { getFavourites, removeFavourites, collectRemovedImages } from \"../utils/fetchVotesFavourites\";\nimport split  from \"../utils/split\";\n\nimport { Header } from \"../components/Header\";\nimport { ButtonGoBack } from \"../components/ButtonGoBack\";\nimport Icons from '../images/icons.svg'\n\nexport default function Favourites() {\n\n    document.title = 'PatsPaw - Favourites';\n    const [breedsImages, setBreedsImages] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [opacity, setOpacity] = useState(1); \n    const [page, setPage] = useState(1);\n    const [pages, setPages] = useState(0); \n    const [shellDisableNext, setShellDisableNext] = useState(false);\n    const [shellDisablePrev, setShellDisablePrev] = useState(true);\n    const [remove, setRemove] = useState(false); \n    const [showMasage, getShowMasage] = useState(true);        \n    let isCancelled = false;\n    \n    useEffect(()=> {    \n        \n        async function getImages(){\n            \n            const response = await getFavourites(10, 1);         \n\n            let pagination_count = response.pagination_count;\n\n            function getNumPages() {\n                return Math.ceil(pagination_count / 10);\n            }\n            if (response && response.response_data.length > 0){\n                const images = response.response_data.map((image) => ({\n                    id: image.id,\n                    image_url: image.image.url,\n                    image_id: image.image.id,\n                    created_at: image.created_at\n                }));\n                \n                setBreedsImages(split(images));                \n                setOpacity(1);\n                setPages(getNumPages);\n                getShowMasage(false);\n                setLoading(false);\n                setShellDisableNext(page === pages || response.response_data.length < 10); \n                setShellDisablePrev(page === 1);                 \n            }else{\n                getShowMasage(true);\n                setLoading(false);\n                setBreedsImages(null);\n            }\n        }\n        \n        if (!isCancelled) {\n            getImages();\n        }\n\n        return () => {\n            isCancelled = true;\n            setRemove(false);\n        };\n          \n    }, [page, remove])\n\n    const prevPage = async (e) => {\n        setLoading(true);\n        setOpacity(0.5);\n        e.preventDefault();               \n        if(page !== 1){\n            setPage(page-1);      \n        }\n    };\n\n    const nextPage = async (e) => {\n        setLoading(true);\n        setOpacity(0.5);\n        if(page !== pages){\n            setPage(page+1);\n        }                    \n    };\n\n    const removeImage = async (id, image_id) => {\n        await removeFavourites(id);  \n        setLoading(true);\n        setRemove(true);\n\n        await collectRemovedImages(image_id);\n    }\n\n    return (\n        <>           \n        <div className=\"content\"> \n            <Header />\n            <div className=\"breeds__container\">  \n                <div className=\"breeds__select-section\">  \n                    <ButtonGoBack navigate={-1} />                     \n                    <h1 className=\"title-page\">FAVOURITES</h1>\n                </div> \n\n                {(() => {\n                    \n                    if(breedsImages) {\n\n                        const numContainers = breedsImages.length;\n                        \n                        let container = [];\n\n                        for(let i=0; i<numContainers; i++){\n                            container.push(<div key={i} className=\"images__container\" style={{opacity: opacity}}>\n                                \n                                {breedsImages[i].map((image, index) => {\n                                    return (\n                                        <div className={`img${index+1} breeds__image`}\n                                            key={image.image_id}\n                                            style={{backgroundImage: `url('${image.image_url}')`}}\n                                        >\n                                            <div className=\"breeds__tiltle\" key={image.image_id}>\n                                                <button className=\"button button__delete\"  onClick={() => removeImage(image.id, image.image_id)}>\n                                                    <svg className=\"icon-delete\" viewBox=\"0 0 10 10\">\n                                                        <use width=\"10\" height=\"10\" href={`${Icons}#close`}></use>\n                                                    </svg>\n                                                </button>\n                                            </div> \n                                        </div> \n                                    )\n                                })}\n                            </div>)\n                        }      \n                        return <>\n                            {container}\n                            \n\n                            <div className=\"button-group\">\n                                <button type=\"button\" aria-label=\"Prev page\" onClick={prevPage} disabled={shellDisablePrev} className=\"button button--prev\">\n                                    <svg className=\"arrow arrow--left\" viewBox=\"0 0 7 12\">\n                                        <use width=\"7\" height=\"12\" href={`${Icons}#arrow-left`}></use>\n                                    </svg>\n                                    PREV\n                                </button> \n                                <button type=\"button\" aria-label=\"Next page\" onClick={nextPage} disabled={shellDisableNext} className=\"button button--next\">\n                                    NEXT\n                                    <svg className=\"arrow arrow--right\" viewBox=\"0 0 7 12\">\n                                        <use width=\"7\" height=\"12\" href={`${Icons}#arrow-left`}></use>\n                                    </svg>     \n                                </button> \n                            </div>                            \n                        </>;\n                    }                \n                })()}\n                {showMasage && <div className=\"vote-conteiner top-margin-40\">No item found</div>}\n                {loading && <CircleLoader speedMultiplier={1} color={\"#FF868E\"} size={150} className=\"loader\"/>}                      \n            </div>\n        </div>         \n        </>\n    )\n}","export default function split(arr) {\n    var size = 10; var arrayOfArrays = [];\n    for (var i=0; i<arr.length; i+=size) {\n         arrayOfArrays.push(arr.slice(i,i+size));\n    }\n    return arrayOfArrays;\n    // const numParts = Math.ceil(arr.length / 10);\n  \n    // return Array\n    //   .from({ length: numParts}, (n, i) => i * 10)\n    //   .map((n, i, a) => arr.slice(n, a[i + 1]));\n};"],"names":["Favourites","document","title","useState","breedsImages","setBreedsImages","loading","setLoading","opacity","setOpacity","page","setPage","pages","setPages","shellDisableNext","setShellDisableNext","shellDisablePrev","setShellDisablePrev","remove","setRemove","showMasage","getShowMasage","isCancelled","useEffect","getNumPages","Math","ceil","pagination_count","getFavourites","response","response_data","length","images","map","image","id","image_url","url","image_id","created_at","split","getImages","prevPage","e","preventDefault","nextPage","removeImage","removeFavourites","collectRemovedImages","className","navigate","numContainers","container","i","push","style","index","backgroundImage","onClick","viewBox","width","height","href","Icons","type","disabled","speedMultiplier","color","size","arr","arrayOfArrays","slice"],"sourceRoot":""}