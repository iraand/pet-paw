{"version":3,"file":"static/js/122.2cf9c2ed.chunk.js","mappings":"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","sources":["components/Order.js","components/Type.js","pages/gallery.js"],"sourcesContent":["import React from \"react\";\nimport Select from 'react-select'\n\nexport function Order(props) {\n\n    const options = [\n        { value: 'Rand', label: 'Random' },\n        { value: 'Desc', label: 'Desc' },\n        { value: 'Asc', label: 'Asc' }\n\n    ];\n\n    return (\n        <>\n        <Select \n            defaultValue={options[0]}\n            options={options}\n            onChange={e => {props.onChange(e.value)}} \n            classNamePrefix = 'react-select' \n            className={props.className}\n        />\n        </>\n    )\n}","import React from \"react\";\nimport Select from 'react-select'\n\nexport function Type(props) {\n\n    const options = [\n        { value: 'gif,jpg,png', label: 'All' },\n        { value: 'jpg,png', label: 'Static' },\n        { value: 'gif', label: 'Animated' }\n\n    ];\n\n    return (\n        <>\n        <Select \n            defaultValue={options[0]}\n            options={options}\n            onChange={e => props.onChange(e.value)} \n            classNamePrefix = 'react-select' \n            className={props.className}\n        />\n        </>\n    )\n}","import React, { useState, useEffect } from \"react\";\n\nimport CircleLoader from \"react-spinners/ClipLoader\";\n\nimport fetchData  from \"../utils/fetchData\";\nimport {favouriteImage}  from \"../utils/favouriteImage\";\nimport split  from \"../utils/split\";\n\nimport { Header } from \"../components/Header\";\nimport { SelectBreeds } from \"../components/SelectBreeds\";\nimport { ButtonGoBack } from \"../components/ButtonGoBack\";\nimport { Limit } from \"../components/Limit\";\nimport { Order } from \"../components/Order\";\nimport { Type } from \"../components/Type\";\n\nimport Icons from '../images/icons.svg'\n\nexport default function Gallery() {\n    const [breedsImages, setBreedsImages] = useState(null);\n    const [uri, setUri] = useState('images/search');\n    const [limit, setLimit] = useState(10);\n    const [order, setOrder] = useState('Rand');\n    const [type, setType] = useState(null);\n    const [value, setValue] = useState(null);\n    const [page, setPage] = useState(100);\n    const [pages, setPages] = useState(1);\n    const [loading, setLoading] = useState(true);\n    const [opacity, setOpacity] = useState(1);\n    const [shellDisableNext, setShellDisableNext] = useState(false);\n    const [shellDisablePrev, setShellDisablePrev] = useState(true);    \n    let isCancelled = false;\n    document.title = 'PatsPaw - Gallery';\n    \n    useEffect(()=> {    \n      \n        async function getImages(){\n            let query_params = {\n                limit: limit,               \n                page: page,\n                order: order,\n                mime_types: type,\n                uri: uri               \n            };\n            let response;\n            let pagination_count = 0;\n            \n            response = await fetchData(query_params);            \n                  \n            pagination_count = response.pagination_count;\n\n            function getNumPages() {\n                return Math.ceil(pagination_count / limit);\n            }\n\n            let images = [];\n\n            if (uri === 'breeds'){\n                const filteredData = response.response_data.filter(item => item.image && item.image.url); \n                images = filteredData.map((image) => ({\n                    breed_id: image.id,\n                    image_url: image.image.url,\n                    image_name: image.name,\n                    image_id: image.image.id\n                }));\n\n            }else{\n                images = response.response_data.map((image) => ({\n                    image_url: image.url,\n                    image_id: image.id\n                }));\n            }\n\n            setBreedsImages(split(images));\n            setLoading(false);\n            setOpacity(1);\n            setPages(getNumPages());  \n\n            if (images.length < 5 || page === pages){\n                setShellDisableNext(true);\n            } else {\n                setShellDisableNext(false);\n            }\n \n            setShellDisablePrev(page === 1); \n    \n            console.log(images);\n            console.log(page, pages);\n\n        }\n        if (!isCancelled) {\n            getImages();\n        }\n\n        return () => {\n            isCancelled = true;\n          };\n\n    }, [uri, page, type, limit, order])\n\n\n    const handleChange = (e) => {\n        setLoading(true);\n        setOpacity(0.5);\n        if (e) {           \n            setPage(1);   \n            setValue(e);\n            setType('gif,jpg,png');\n\n            let uri = '';\n            if (e.value === \"All breeds\") {\n                uri = 'breeds'\n            }else{\n                uri  = `images/search?breed_ids=${e.value}`;\n            }\n    \n            setUri(uri);\n        }\n    }\n\n    const handleChangeType = (val) => {\n        setPage(1);               \n        setValue(null);\n        setLoading(true);\n        setOpacity(0.5);\n        if (val){\n            setType(val);\n            const uri  = `images/search?mime_types=${val}`;\n            setUri(uri);        \n        }    \n    }\n    \n    const prevPage = async (e) => {\n        setLoading(true);\n        setOpacity(0.5);\n        e.preventDefault();               \n        if(page !== 1){\n            setPage(page-1);      \n        }\n    };\n\n    const nextPage = async (e) => {\n        setLoading(true);\n        setOpacity(0.5);\n        if(page !== pages){\n            setPage(page+1);\n        }                    \n    };\n                                                   \n    return (\n        <>           \n        <div className=\"content\"> \n            <Header />\n            <div className=\"breeds__container\">  \n                <div className=\"breeds__select-section\">  \n                    <ButtonGoBack navigate={-1} />                     \n                    <h1 className=\"title-page\">GALLERY</h1>\n                    <div className=\"wrapper\">\n                        <button type=\"button\" aria-label=\"upload\" className=\"button button-upload\">\n                            <svg className=\"icon-upload\" viewBox=\"0 0 16 16\">\n                                <use width=\"16\" height=\"16\" href={`${Icons}#upload`}></use>\n                            </svg>\n                            UPLOAD\n                        </button>\n                    </div>\n                </div> \n                <div className=\"gallery__select-section\">\n                    <span className=\"label\">ORDER</span>\n                    <span className=\"label\">TYPE</span>\n                    <Order onChange={val => {\n                        setLoading(true);\n                        setOpacity(0.5);\n                        setOrder(val)}}\n                        className=\"select-order\"\n                    />                      \n                    <Type onChange={handleChangeType} className=\"select-order\"/> \n                    <span className=\"label\">BREED</span>                      \n                    <span className=\"label\">LIMIT</span>\n                    <SelectBreeds onChange={handleChange} placeholder={'None'} defaultValue={null} value={value} className=\"gallery__breeds-select\"/>  \n                    <div className=\"wrapper\">\n                        <Limit onChange={val => setLimit(val)} className=\"gallery__limit\"/>  \n                        <button type=\"button\"\n                            className=\"button button-reload\"\n                            onClick={nextPage}\n                            disabled={shellDisableNext} \n                        >\n                            <svg className=\"icon-reload\" viewBox=\"0 0 18 20\">\n                                <use width=\"18\" height=\"20\" href={`${Icons}#reload`}></use>\n                            </svg>                      \n                        </button>\n                    </div>                  \n                </div>\n\n                {(() => {\n                    \n                    if(breedsImages) {\n\n                        const numContainers = breedsImages.length;\n                        \n                        let container = [];\n\n                        for(let i=0; i<numContainers; i++){\n                            container.push(<div key={page+i} className=\"images__container\" style={{opacity: opacity}}>\n                                \n                                {breedsImages[i].map((image, index) => {\n                                    return (<>\n                                        <div className={`img${index+1} breeds__image`}\n                                            key={image.image_id}\n                                            style={{backgroundImage: `url('${image.image_url}')`}}\n                                        >\n                                            <div className=\"breeds__tiltle\" key={image.image_name}>\n                                                <button className=\"button button__love\"  onClick={() => {favouriteImage(image.image_id)}}>\n                                                    <svg className=\"icon-love\" viewBox=\"0 0 20 17\">\n                                                        <use width=\"20\" height=\"17\" href={`${Icons}#smile-love`}></use>\n                                                    </svg>\n                                                </button>\n                                            </div> \n                                        </div> \n                                    </>)\n                                })}\n                            </div>)\n                        }      \n                        return <>\n                            {container}\n                            <div className=\"button-group\">\n                                <button type=\"button\" aria-label=\"Prev page\" onClick={prevPage} disabled={shellDisablePrev} className=\"button button--prev\">\n                                    <svg className=\"arrow arrow--left\" viewBox=\"0 0 7 12\">\n                                        <use width=\"7\" height=\"12\" href={`${Icons}#arrow-left`}></use>\n                                    </svg>\n                                    PREV\n                                </button> \n                                <button type=\"button\" aria-label=\"Next page\" onClick={nextPage} disabled={shellDisableNext} className=\"button button--next\">\n                                    NEXT\n                                    <svg className=\"arrow arrow--right\" viewBox=\"0 0 7 12\">\n                                        <use width=\"7\" height=\"12\" href={`${Icons}#arrow-left`}></use>\n                                    </svg>     \n                                </button> \n                            </div>\n                        </>;\n                    } \n                })()}\n                {loading && <CircleLoader speedMultiplier={1} color={\"#FF868E\"} size={150} className=\"loader\"/>}\n            </div>\n        </div>         \n        </>\n    )\n} "],"names":["Order","props","options","value","label","defaultValue","onChange","e","classNamePrefix","className","Type","Gallery","useState","breedsImages","setBreedsImages","uri","setUri","limit","setLimit","order","setOrder","type","setType","setValue","page","setPage","pages","setPages","loading","setLoading","opacity","setOpacity","shellDisableNext","setShellDisableNext","shellDisablePrev","setShellDisablePrev","isCancelled","document","title","useEffect","getNumPages","Math","ceil","pagination_count","query_params","mime_types","fetchData","response","images","filteredData","response_data","filter","item","image","url","map","breed_id","id","image_url","image_name","name","image_id","split","length","console","log","getImages","prevPage","preventDefault","nextPage","Header","ButtonGoBack","navigate","viewBox","width","height","href","Icons","val","SelectBreeds","placeholder","Limit","onClick","disabled","numContainers","container","i","push","style","index","backgroundImage","favouriteImage","speedMultiplier","color","size"],"sourceRoot":""}