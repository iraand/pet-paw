{"version":3,"file":"static/js/505.fc759473.chunk.js","mappings":"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","sources":["pages/voting.js","utils/fetchData.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CircleLoader from \"react-spinners/ClipLoader\";\n\nimport fetchData  from \"../utils/fetchData\";\nimport { vote, getFavourites, getVotes, getLikes, favouritesLikesDislikes } from \"../utils/fetchVotesFavourites\";\nimport { Header } from \"../components/Header\";\nimport Icons from '../images/icons.svg'\nimport { ButtonGoBack } from \"../components/ButtonGoBack\";\n\nexport default function Voting() {\n    let sub_id = '053221978'; \n    document.title = `PetsPaw - Voting`;\n    const [image, setImage] = useState(null);\n    const [updatedImage, setUpdatedImage] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [votesData, setVotesData] = useState([]); \n\n    let isCancelled = false;\n\n    const icons = [\n        <svg className=\"vote-icon vote-icon-like\" viewBox=\"0 0 20 20\">\n            <use width=\"20\" height=\"20\" href={`${Icons}#smile-like`}></use>\n        </svg>,\n        <svg className=\"vote-icon vote-icon-love\" viewBox=\"0 0 20 20\">\n            <use width=\"20\" height=\"20\" href={`${Icons}#smile-love`}></use>\n        </svg>,\n        <svg className=\"vote-icon vote-icon-dislike\" viewBox=\"0 0 20 20\">\n            <use width=\"20\" height=\"20\" href={`${Icons}#smile-dislike`}></use>\n        </svg>\n    ];\n\n    useEffect(()=> {\n\n        async function getImage(){\n            let query_params = {\n                limit: 1,               \n                page: 1,\n                order: 'Rand',\n                uri: `images/search`               \n            };\n\n            let response = await fetchData(query_params);                        \n\n            setImage(response.response_data[0]);    \n            setLoading(false);\n\n            const votes = await favouritesLikesDislikes();\n            \n            setVotesData(votes);\n        }\n\n        if (!isCancelled) {\n            getImage();    \n        }\n        return () => {\n            isCancelled = true;\n          };\n\n    }, [updatedImage])\n\n    async function castVote(val) {\n        setLoading(true);\n\n        const image_id = image.id;\n        \n        const response = await vote({val, image_id, sub_id});\n       \n        setUpdatedImage(response);\n    };\n\n    return (\n        <>           \n        <div className=\"content\"> \n            <Header />\n            <div className=\"breeds__container\">  \n                <div className=\"breeds__select-section\">  \n                    <ButtonGoBack navigate={-1} />                     \n                    <h1 className=\"title-page\">VOTING</h1>\n                </div> \n                \n                {(() => {\n                    \n                    if(image) {    \n                        return <>\n                            <div className=\"image_container\">\n                                <img src={image.url} alt={image.id} className=\"image\" />\n                            </div> \n                            <div className=\"icons-container\">\n                                <button className='voting-button' onClick={() => {castVote(1)}}>\n                                    <svg className=\"smile-like\" viewBox=\"0 0 30 30\">\n                                        <use width=\"30\" height=\"30\" href={`${Icons}#smile-like`}></use>\n                                    </svg>\n                                </button>\n                                <button className='voting-button' onClick={() => {castVote(\"favourites\")}}>\n                                    <svg className=\"smile-love\" viewBox=\"0 0 30 26\">\n                                        <use width=\"30\" height=\"26\" href={`${Icons}#smile-love`}></use>\n                                    </svg>\n                                </button>\n                                <button className='voting-button' onClick={() => {castVote(0)}}>\n                                    <svg className=\"smile-dislike\" viewBox=\"0 0 30 30\">\n                                        <use width=\"30\" height=\"30\" href={`${Icons}#smile-dislike`}></use>\n                                    </svg>\n                                </button>\n                            </div> \n                            {votesData  && <div>                              \n                                 {votesData.map((vote, i)=> {\n                                    return <div className=\"vote-conteiner\" key={i}>\n                                        <p className=\"vote_time\">{vote.created_at}</p>\n                                        <p>Image ID: <span className=\"vote_id\">{vote.image_id}</span>\n                                            {vote.value === 1 ?  \" was added to Like\" : vote.value === 0 ? \" was added to Dislike\": vote.value === -1 ? \" was removed from Favourites\" : \" was added to Favourites\"}</p>\n                                        {vote.value === 1 ?  icons[0] : vote.value === 0 ? icons[2] : vote.value === -1 ?  null : icons[1] }                  \n                                    </div>\n                                })}\n                            </div> } \n                        </>;\n                    } \n                })()}\n                {loading && <CircleLoader speedMultiplier={1} color={\"#FF868E\"} size={150} className=\"loader loader-voqating\"/>}\n            </div>\n        </div>         \n        </>\n    )\n} ","import axios from \"axios\";\naxios.defaults.headers.common['x-api-key'] = \"531a21b2-f437-4298-809c-b7c57253fac4\"   \n\nasync function fetchData (query_params) {\n\n    const { limit, order, page, type, uri } = query_params;\n\n    try{\n\n        let query_params = {\n            limit: limit,           \n            page: page-1,\n            order: order,\n            mime_types: type\n        }        \n\n        let response = await axios.get(`https://api.thecatapi.com/v1/${uri}`, { params: query_params } ) \n\n        let pagination_count = response.headers['pagination-count'];    \n        \n        \n        return {response_data:response.data, pagination_count};\n\n    }catch(err){\n        console.log(err);\n    }\n}\n\nexport default fetchData;"],"names":["Voting","sub_id","document","title","useState","image","setImage","updatedImage","setUpdatedImage","loading","setLoading","votesData","setVotesData","isCancelled","icons","className","viewBox","width","height","href","Icons","castVote","val","image_id","id","vote","response","useEffect","query_params","limit","page","order","uri","fetchData","response_data","favouritesLikesDislikes","votes","getImage","navigate","src","url","alt","onClick","map","i","created_at","value","speedMultiplier","color","size","type","mime_types","axios","params","pagination_count","headers","data","console","log"],"sourceRoot":""}