{"version":3,"file":"static/js/913.e5690f8f.chunk.js","mappings":"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","sources":["pages/breeds.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport CircleLoader from \"react-spinners/ClipLoader\";\n\nimport fetchData  from \"../utils/fetchData\";\nimport split  from \"../utils/split\";\n\nimport { Header } from \"../components/Header\";\nimport { SelectBreeds } from \"../components/SelectBreeds\";\nimport { ButtonGoBack } from \"../components/ButtonGoBack\";\nimport { Limit } from \"../components/Limit\";\n\nimport Icons from '../images/icons.svg'\n\nexport default function Breeds() {\n    let navigate = useNavigate();\n\n    document.title = 'PatsPaw - Breeds';\n    const [breedsImages, setBreedsImages] = useState(null);\n    const [limit, setLimit] = useState(10);\n    const [page, setPage] = useState(1);\n    const [pages, setPages] = useState(100);\n    const [loading, setLoading] = useState(true);\n    const [opacity, setOpacity] = useState(1);\n    const [shellDisableNext, setShellDisableNext] = useState(false);\n    const [shellDisablePrev, setShellDisablePrev] = useState(true);       \n    let isCancelled = false;\n\n    useEffect(()=> {\n        \n        async function getImages(){\n            let query_params = {\n                limit: limit,               \n                page: page,\n                order: 'Desc',\n                uri: 'breeds'              \n            };\n            let response;\n            let pagination_count = 0;\n            \n            response = await fetchData(query_params);                        \n                  \n            pagination_count = response.pagination_count;\n\n            function getNumPages() {\n                return Math.ceil(pagination_count / limit);\n            }\n\n            const filteredData = response.response_data.filter(item => item.image && item.image.url); \n            let images = filteredData.map((image) => ({\n                breed_id: image.id,\n                image_url: image.image.url,\n                image_name: image.name,\n                image_id: image.image.id\n            }));\n\n            setBreedsImages(split(images));\n            setLoading(false);\n            setOpacity(1);\n            setPages(getNumPages);  \n            setShellDisableNext(page === pages); \n            setShellDisablePrev(page === 1); \n\n        }\n        if (!isCancelled) {\n            getImages();\n        }\n        return () => {\n            isCancelled = true;\n          };\n\n    }, [page, limit])\n\n\n    const handleChange = (e) => {\n        setLoading(true);\n        setOpacity(0.5);\n        navigate(`/breed/${e.value}`, { replace: true });         \n    }\n\n    const prevPage = async (e) => {\n        setLoading(true);\n        setOpacity(0.5);\n        e.preventDefault();               \n        if(page !== 1){\n            setPage(page-1);      \n        }\n    };\n\n    const nextPage = async (e) => {\n        setLoading(true);\n        setOpacity(0.5);\n        if(page !== pages){\n            setPage(page+1);\n        }                    \n    };\n                                                   \n    return (\n        <>           \n        <div className=\"content\"> \n            <Header />\n            <div className=\"breeds__container\">  \n                <div className=\"breeds__select-section\">  \n                    <ButtonGoBack navigate={-1} />                     \n                    <h1 className=\"title-page\">BREEDS</h1>\n                    <div className=\"wrapper\">\n                        <SelectBreeds\n                            onChange={handleChange}\n                            defaultValue={[{ value: 'All breeds', label: 'All breeds' }]}\n                            className=\"breeds__breeds-select\"\n                        />                   \n                        <Limit onChange={val => setLimit(val)} className=\"breeds__limit\"/>\n                        <button type=\"button\" aria-label=\"sort\" className=\"button button-sort\">\n                                <svg className=\"icon-sort\" viewBox=\"0 0 19 22\">\n                                    <use width=\"19\" height=\"22\" href={`${Icons}#sortAB`}></use>\n                                </svg>\n                            </button> \n                            <button type=\"button\" aria-label=\"sort\" className=\"button button-sort\">\n                                <svg className=\"icon-sort\" viewBox=\"0 0 19 22\">\n                                    <use width=\"19\" height=\"22\" href={`${Icons}#sortBA`}></use>\n                                </svg>\n                            </button>\n                    </div>\n                </div> \n                \n                {(() => {\n                    \n                    if(breedsImages) {\n                        \n                        const numContainers = breedsImages.length;\n                        \n                        let container = [];\n\n                        for(let i=0; i<numContainers; i++){\n                            container.push(<div key={page+i} className=\"images__container\" style={{opacity: opacity}}>\n                                \n                                {breedsImages[i].map((image, index) => {\n\n                                    if (image) {\n                                        return (<>\n                                            <div className={`img${index+1} breeds__image`}\n                                                key={image.image_id}\n                                                style={{backgroundImage: `url('${image.image_url}')`}}\n                                            >\n                                                <div className=\"breeds__tiltle\" key={image.image_name}>\n                                                    {image.breed_id && <button className=\"button button__tiltle\"\n                                                        onClick={()=>{handleChange({value: image.breed_id})\n                                                        }}\n                                                    >\n                                                        {image.image_name}\n                                                    </button>}\n                                                </div> \n                                            </div> \n                                        </>)\n                                    }\n                                })}\n                            </div>)\n                        }      \n                        return <>\n                            {container}\n                            <div className=\"button-group\">\n                                <button type=\"button\" aria-label=\"Prev page\" onClick={prevPage} disabled={shellDisablePrev} className=\"button button--prev\">\n                                    <svg className=\"arrow arrow--left\" viewBox=\"0 0 7 12\">\n                                        <use width=\"7\" height=\"12\" href={`${Icons}#arrow-left`}></use>\n                                    </svg>\n                                    PREV\n                                </button> \n                                <button type=\"button\" aria-label=\"Next page\" onClick={nextPage} disabled={shellDisableNext} className=\"button button--next\">\n                                    NEXT\n                                    <svg className=\"arrow arrow--right\" viewBox=\"0 0 7 12\">\n                                        <use width=\"7\" height=\"12\" href={`${Icons}#arrow-left`}></use>\n                                    </svg>     \n                                </button> \n                            </div>\n                        </>;\n                    } \n                })()}\n                {loading && <CircleLoader speedMultiplier={1} color={\"#FF868E\"} size={150} className=\"loader\"/>}\n            </div>\n        </div>         \n        </>\n    )\n} "],"names":["Breeds","navigate","useNavigate","document","title","useState","breedsImages","setBreedsImages","limit","setLimit","page","setPage","pages","setPages","loading","setLoading","opacity","setOpacity","shellDisableNext","setShellDisableNext","shellDisablePrev","setShellDisablePrev","isCancelled","useEffect","getNumPages","Math","ceil","pagination_count","query_params","order","uri","fetchData","response","filteredData","response_data","filter","item","image","url","images","map","breed_id","id","image_url","image_name","name","image_id","split","getImages","handleChange","e","value","replace","prevPage","preventDefault","nextPage","className","onChange","defaultValue","label","val","type","viewBox","width","height","href","Icons","numContainers","length","container","i","push","style","index","backgroundImage","onClick","disabled","speedMultiplier","color","size"],"sourceRoot":""}