{"version":3,"file":"static/js/755.68b8653e.chunk.js","mappings":"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","sources":["components/Limit.js","components/SelectBreeds.js","utils/uploadImage.js","components/Order.js","components/Type.js","components/Modal.js","pages/gallery.js","utils/fetchData.js","utils/split.js"],"sourcesContent":["import React from \"react\";\nimport Select from 'react-select'\n\nexport function Limit(props) {\n\n    const options = [\n        { value: 5, label: 'Limit: 5' },\n        { value: 10, label: 'Limit: 10' },\n        { value: 15, label: 'Limit: 15' },\n        { value: 20, label: 'Limit: 20' },\n\n    ];\n\n    return (\n        <Select \n            defaultValue={options[1]}\n            options={options}\n            onChange={e => props.onChange(e.value)} \n            classNamePrefix = 'react-select' \n            className={props.className}\n        />\n    )\n}","import React, {useState, useEffect} from 'react';\nimport Select from 'react-select'; \n\n// import axios from \"axios\";\n\nexport const SelectBreeds = (props) => {   \n    const [breedsOptions, setBreedsOptions] = useState([{ value: 'All breeds', label: 'All breeds' }]);\n    \n    const handleChange = (e) => {\n        return props.onChange(e);\n    }\n    useEffect(() => {\n        async function getOptions(){\n            // axios.defaults.headers.common['x-api-key'] = \"531a21b2-f437-4298-809c-b7c57253fac4\"   \n            // let response = await axios.get('https://api.thecatapi.com/v1/breeds') \n            const savedBreeds = await JSON.parse(localStorage.getItem('breeds'));\n            \n            const options = savedBreeds.map( item => ({ value: item.id, label: item.name }));\n            setBreedsOptions( (breedsOptions) => [...breedsOptions, ...options]); \n        }\n               \n        getOptions();\n\n    },[])\n\n    return <Select\n            value={props.value}\n            defaultValue={props.defaultValue || breedsOptions[0]}\n            options={breedsOptions}\n            onChange={handleChange} \n            classNamePrefix = 'react-select'  \n            className={props.className}\n            placeholder={props.placeholder}\n            />\n}\n","import axios from \"axios\";\n\naxios.defaults.headers.common['x-api-key'] = \"531a21b2-f437-4298-809c-b7c57253fac4\";\n\nexport const uploadImage = async (file) => {\n      \n    try{        \n        let formData = new FormData();\n        formData.append('file', file);\n        formData.append('sub_id', '053221978');\n        \n        const response =  await axios.post(`https://api.thecatapi.com/v1/images/upload`, formData, {headers: {'Content-Type':'multipart/form-data' }}) \n        \n        return response;\n\n    }catch(err){\n        console.log(err);\n    }\n};","import React from \"react\";\nimport Select from 'react-select'\n\nexport function Order(props) {\n\n    const options = [\n        { value: 'Rand', label: 'Random' },\n        { value: 'Desc', label: 'Desc' },\n        { value: 'Asc', label: 'Asc' }\n\n    ];\n\n    return (\n        <>\n        <Select \n            defaultValue={options[0]}\n            options={options}\n            onChange={e => {props.onChange(e.value)}} \n            classNamePrefix = 'react-select' \n            className={props.className}\n        />\n        </>\n    )\n}","import React from \"react\";\nimport Select from 'react-select'\n\nexport function Type(props) {\n\n    const options = [\n        { value: 'gif,jpg,png', label: 'All' },\n        { value: 'jpg,png', label: 'Static' },\n        { value: 'gif', label: 'Animated' }\n\n    ];\n\n    return (\n        <>\n        <Select \n            defaultValue={options[0]}\n            options={options}\n            onChange={e => props.onChange(e.value)} \n            classNamePrefix = 'react-select' \n            className={props.className}\n        />\n        </>\n    )\n}","import Icons from '../images/icons.svg'\n\nexport const Modal = ({ handleClose, show, children }) => {\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n  \n    return (\n      <div className={showHideClassName}>\n        <section className=\"modal-main\">\n          {children}\n          <button type=\"button\" onClick={handleClose} className=\"button button-close\">\n            <svg className=\"icon-close\" viewBox=\"0 0 18 18\">\n                <use width=\"16\" height=\"16\" href={`${Icons}#close`}></use>\n            </svg>\n          </button>\n        </section>\n      </div>\n    );\n};\n","import React, { useState, useEffect, useCallback} from \"react\";\n\nimport {useDropzone} from 'react-dropzone'\nimport CircleLoader from \"react-spinners/ClipLoader\";\n\nimport fetchData  from \"../utils/fetchData\";\nimport {uploadImage}  from \"../utils/uploadImage\";\nimport { vote } from \"../utils/fetchVotesFavourites\";\nimport split  from \"../utils/split\";\n\nimport { Header } from \"../components/Header\";\nimport { SelectBreeds } from \"../components/SelectBreeds\";\nimport { ButtonGoBack } from \"../components/ButtonGoBack\";\nimport { Limit } from \"../components/Limit\";\nimport { Order } from \"../components/Order\";\nimport { Type } from \"../components/Type\";\nimport { Modal } from '../components/Modal.js';\nimport Icons from '../images/icons.svg'\n\nexport default function Gallery() {\n    const [breedsImages, setBreedsImages] = useState(null);\n    const [uri, setUri] = useState('images/search');\n    const [limit, setLimit] = useState(10);\n    const [order, setOrder] = useState('Rand');\n    const [type, setType] = useState(null);\n    const [value, setValue] = useState(null);\n    const [page, setPage] = useState(1);\n    const [pages, setPages] = useState(0);\n    const [loading, setLoading] = useState(true);\n    const [opacity, setOpacity] = useState(1);\n    const [shellDisableNext, setShellDisableNext] = useState(false);\n    const [shellDisablePrev, setShellDisablePrev] = useState(true); \n    const [showModal, setShowModal] = useState(false); \n\n    const [files, setFiles] = useState([]);\n    const [uploading, setUploading] = useState(false);\n    const [uploaded, setUploaded] = useState(false);\n    const [ bgColor, setBgColor] = useState({backgroundColor: '#FFFFFF'}); \n    const [ arror, setArror] = useState(false); \n\n    const onDrop = useCallback(acceptedFiles => {\n        setFiles([]);\n        setBgColor({background: '#FFFFFF'});\n        setUploaded(false);\n        setUploading(false);\n        setArror(false);\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })));\n      }, [])\n\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\n    \n    document.title = 'PatsPaw - Gallery';\n    let isCancelled = false;    \n\n    useEffect(()=> {    \n        \n        async function getImages(){\n            let query_params = {\n                limit: limit,               \n                page: page,\n                order: order,\n                mime_types: type,\n                uri: uri               \n            };\n            let response;\n            let pagination_count = 0;\n            \n            if (!isCancelled) {\n                response = await fetchData(query_params);            \n                  \n                pagination_count = response.pagination_count;\n\n                function getNumPages() {\n                    return Math.ceil(pagination_count / limit);\n                }\n\n                let images = [];\n\n                if (uri === 'breeds'){\n                    const filteredData = response.response_data.filter(item => item.image && item.image.url); \n                    images = filteredData.map((image) => ({\n                        breed_id: image.id,\n                        image_url: image.image.url,\n                        image_name: image.name,\n                        image_id: image.image.id\n                    }));\n\n                }else{\n                    images = response.response_data.map((image) => ({\n                        image_url: image.url,\n                        image_id: image.id\n                    }));\n                }\n\n                setBreedsImages(split(images));\n                setLoading(false);\n                setOpacity(1);\n                setPages(getNumPages);\n\n                setShellDisableNext(page === Math.ceil(pagination_count / limit) || pagination_count < limit); \n                setShellDisablePrev(page === 1); \n            }\n        }\n        \n        getImages();\n\n        return () => {\n            isCancelled = true;  \n            files.forEach(file => URL.revokeObjectURL(file.preview)); \n        };       \n\n    }, [uri, page, type, limit, order])\n\n\n    const handleChange = (e) => {\n        setLoading(true);\n        setOpacity(0.5);\n        if (e) {           \n            setPage(1);    \n            setValue(e);\n            setPages(0); \n            setOrder('Asc')\n            setType('gif,jpg,png');\n\n            let uri = '';\n            if (e.value === \"All breeds\") {\n                uri = 'breeds'\n            }else{\n                uri  = `images/search?breed_ids=${e.value}`;\n            }\n    \n            setUri(uri);\n        }\n    }\n\n    const handleChangeType = (val) => {\n        setPage(1);  \n        setPages(0);                 \n        setValue(null);\n        setLoading(true);\n        setOpacity(0.5);\n        if (val){\n            setType(val);\n            const uri  = `images/search?mime_types=${val}`;\n            setUri(uri);        \n        }    \n    }\n    \n    const prevPage = async (e) => {\n        setLoading(true);\n        setOpacity(0.5);\n        e.preventDefault();               \n        if(page !== 1){\n            setPage(page-1);      \n        }\n    };\n\n    const nextPage = async (e) => {\n        setLoading(true);\n        setOpacity(0.5);\n        if(page !== pages){\n            setPage(page+1);\n        }                    \n    };\n\n    const castVote = async (image_id) => {\n        await vote({val: \"favourites\", image_id});\n    }\n\n    const upload = async () => {\n        setUploading(true);\n        const file = files[0];\n\n        const response = await uploadImage(file);\n\n        if(response && response.data.id){\n            setUploading(false);\n            setFiles([]);\n            setBgColor({background: '#FFFFFF'});\n            setUploaded(true);\n            setArror(false);\n        }else{\n            setBgColor({background: '#FBE0DC'});\n            setUploaded(false);\n            setArror(true);\n        }\n    }\n\n    return (      \n        <div className=\"content\"> \n            <Header />\n            <div className=\"breeds__container\">  \n                <div className=\"breeds__select-section\">  \n                    <ButtonGoBack navigate={-1} />                     \n                    <h1 className=\"title-page\">GALLERY</h1>\n                    <div className=\"wrapper upload__wrapper\">\n                        <button type=\"button\"\n                            aria-label=\"upload\"\n                            className=\"button button-upload\"\n                            onClick={() => setShowModal(true)}\n                        >\n                            <svg className=\"icon-upload\" viewBox=\"0 0 16 16\">\n                                <use width=\"16\" height=\"16\" href={`${Icons}#upload`}></use>\n                            </svg>\n                            UPLOAD\n                        </button>\n                    </div>\n                </div> \n                <div className=\"gallery__select-section\">\n                    <div>\n                        <span className=\"label\">ORDER</span>\n                        <Order onChange={val => {\n                            setLoading(true);\n                            setOpacity(0.5);\n                            setOrder(val)}}\n                            className=\"select-order\"\n                        />\n                    </div> \n                    <div>\n                        <span className=\"label\">TYPE</span>                    \n                     <Type onChange={handleChangeType} className=\"select-order\"/> \n                    </div>\n                    <div>\n                        <span className=\"label\">BREED</span>                   \n                        <SelectBreeds onChange={handleChange} placeholder={'None'} defaultValue={null} value={value} className=\"gallery__breeds-select\"/>                      \n                    </div>\n                    <div>\n                        <span className=\"label\">LIMIT</span>                                                       \n                        <div className=\"wrapper gallery__wrapper\">                        \n                            <Limit onChange={val => setLimit(val)} className=\"gallery__limit\"/>  \n                            <button type=\"button\"\n                                className=\"button button-reload\"\n                                onClick={nextPage}\n                                disabled={shellDisableNext} \n                            >\n                                <svg className=\"icon-reload\" viewBox=\"0 0 18 20\">\n                                    <use width=\"18\" height=\"20\" href={`${Icons}#reload`}></use>\n                                </svg>                      \n                            </button>\n                        </div>  \n                    </div>                   \n                </div>\n\n                {(() => {\n                    \n                    if(breedsImages) {\n\n                        const numContainers = breedsImages.length;\n                        \n                        let container = [];\n\n                        for(let i=0; i<numContainers; i++){\n                            container.push(<div key={i} className=\"images__container gallery__images__container\" style={{opacity: opacity}}>\n                                \n                                {breedsImages[i].map((image, index) => {\n                                    return (\n                                        <div className={`img${index+1} breeds__image`}\n                                            key={image.image_id}\n                                            style={{backgroundImage: `url('${image.image_url}')`}}\n                                        >\n                                            <div className=\"breeds__tiltle\" key={image.image_name}>\n                                                <button className=\"button button__love\"  onClick={() => castVote(image.image_id)}>\n                                                    <svg className=\"icon-love\" viewBox=\"0 0 20 17\">\n                                                        <use width=\"20\" height=\"17\" href={`${Icons}#smile-love`}></use>\n                                                    </svg>\n                                                </button>\n                                            </div> \n                                        </div> \n                                    )\n                                })}\n                            </div>)\n                        }      \n                        return <>\n                            {container}\n                            <div className=\"button-group\">\n                                <button type=\"button\" aria-label=\"Prev page\" onClick={prevPage} disabled={shellDisablePrev} className=\"button button--prev\">\n                                    <svg className=\"arrow arrow--left\" viewBox=\"0 0 7 12\">\n                                        <use width=\"7\" height=\"12\" href={`${Icons}#arrow-left`}></use>\n                                    </svg>\n                                    PREV\n                                </button> \n                                <button type=\"button\" aria-label=\"Next page\" onClick={nextPage} disabled={shellDisableNext} className=\"button button--next\">\n                                    NEXT\n                                    <svg className=\"arrow arrow--right\" viewBox=\"0 0 7 12\">\n                                        <use width=\"7\" height=\"12\" href={`${Icons}#arrow-left`}></use>\n                                    </svg>     \n                                </button> \n                            </div>\n                        </>;\n                    } \n                })()}\n                <Modal show={showModal} handleClose={ () => setShowModal(false) } >\n                    <p className=\"modal_title\">Upload a .jpg or .png Cat Image</p>\n                    <p className=\"modal_text\">Any uploads must comply with the <a target=\"blank\" href=\"https://thecatapi.com/privacy\"> upload guidelines</a> or face deletion.</p>\n                    <div className=\"modal_image-container\" {...getRootProps()} style={bgColor}>                       \n                        <input {...getInputProps()} />\n                        \n                        { files.length > 0 ? \n                            <aside className=\"thumbs-container\">\n                                {files.map(file => (\n                                    <div className=\"thumb\" key={file.name}>\n                                        <div className=\"thumb-inner\">       \n                                        <img\n                                            className=\"thumb-img\"\n                                            src={file.preview}\n                                            alt={file.name}\n                                            onLoad={() => { URL.revokeObjectURL(file.preview) }}\n                                        />\n                                        </div>\n                                    </div>\n                                    ))\n                                }\n                            </aside> : \n                            isDragActive ?\n                                <p className=\"modal_text modal_text_bold\">Drop the files here ...</p> :\n                                <p className=\"modal_text modal_text_bold\"><span>Drag here</span> your file or <span>Click here</span> to upload</p>                                                   \n                        }                   \n                    </div>\n \n                    \n                    { files.length > 0 ? \n                        <><p className=\"modal_text\">{`Image File Name: ${files[0].name}`}</p>\n                        { !arror && <button type=\"button\" className=\"button upload_button\" onClick={() => {upload()}}>\n                        { uploading ?                       \n                            <><CircleLoader speedMultiplier={1} color={\"#FFFFFF\"} size={16} className=\"button-loader\"/>\n                                UPLOADING\n                            </>\n                            : 'UPLOAD PHOTO'}\n                        </button>}\n\n                        { arror ? \n                            <div className=\"upload-conteiner\">\n                                <svg className=\"icon-notdone\" viewBox=\"0 0 20 20\">\n                                    <use width=\"20\" height=\"20\" href={`${Icons}#not-done`}></use>\n                                </svg>\n                                <p>No Cat found - try a different one!</p>\n                            </div>\n                            : null\n                        }\n\n                        </> :\n                        <>\n                            <p className=\"modal_text\">{`No file selected`}</p> \n\n                            { uploaded ? \n                                <div className=\"upload-conteiner\">\n                                    <svg className=\"icon-done\" viewBox=\"0 0 20 20\">\n                                        <use width=\"20\" height=\"20\" href={`${Icons}#done`}></use>\n                                    </svg>\n                                    <p>Thanks for the Upload - Cat found!</p>\n                                </div>\n                                : null\n                            }\n                        </>                       \n                    }\n                </Modal>\n\n                {loading && <CircleLoader speedMultiplier={1} color={\"#FF868E\"} size={150} className=\"loader\"/>}\n            </div>\n        </div>         \n    )\n} ","import axios from \"axios\";\naxios.defaults.headers.common['x-api-key'] = \"531a21b2-f437-4298-809c-b7c57253fac4\"   \n\nasync function fetchData (query_params) {\n\n    const { limit, order, page, type, uri } = query_params;\n\n    try{\n\n        let query_params = {\n            limit: limit,           \n            page: page-1,\n            order: order,\n            mime_types: type\n        }        \n\n        let response = await axios.get(`https://api.thecatapi.com/v1/${uri}`, { params: query_params } ) \n\n        let pagination_count = response.headers['pagination-count'];    \n        \n        \n        return {response_data:response.data, pagination_count};\n\n    }catch(err){\n        console.log(err);\n    }\n}\n\nexport default fetchData;","export default function split(arr) {\n    var size = 10; var arrayOfArrays = [];\n    for (var i=0; i<arr.length; i+=size) {\n         arrayOfArrays.push(arr.slice(i,i+size));\n    }\n    return arrayOfArrays;\n    // const numParts = Math.ceil(arr.length / 10);\n  \n    // return Array\n    //   .from({ length: numParts}, (n, i) => i * 10)\n    //   .map((n, i, a) => arr.slice(n, a[i + 1]));\n};"],"names":["Limit","props","options","value","label","defaultValue","onChange","e","classNamePrefix","className","SelectBreeds","useState","breedsOptions","setBreedsOptions","useEffect","JSON","parse","localStorage","getItem","savedBreeds","map","item","id","name","getOptions","placeholder","axios","uploadImage","file","formData","FormData","append","headers","response","console","log","Order","Type","Modal","handleClose","show","children","showHideClassName","type","onClick","viewBox","width","height","href","Icons","Gallery","breedsImages","setBreedsImages","uri","setUri","limit","setLimit","order","setOrder","setType","setValue","page","setPage","pages","setPages","loading","setLoading","opacity","setOpacity","shellDisableNext","setShellDisableNext","shellDisablePrev","setShellDisablePrev","showModal","setShowModal","files","setFiles","uploading","setUploading","uploaded","setUploaded","backgroundColor","bgColor","setBgColor","arror","setArror","onDrop","useCallback","acceptedFiles","background","Object","assign","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","document","title","isCancelled","query_params","mime_types","pagination_count","getNumPages","Math","ceil","fetchData","images","filteredData","response_data","filter","image","url","breed_id","image_url","image_name","image_id","split","getImages","forEach","revokeObjectURL","prevPage","preventDefault","nextPage","castVote","vote","val","upload","data","Header","ButtonGoBack","navigate","disabled","numContainers","length","container","i","push","style","index","backgroundImage","target","src","alt","onLoad","speedMultiplier","color","size","params","arr","arrayOfArrays","slice"],"sourceRoot":""}